#INCLUDE <P16F873A.INC>    
__CONFIG _FOSC_XT & _WDTE_OFF & _PWRTE_ON & _BOREN_ON & _LVP_OFF & _CPD_OFF & _WRT_OFF & _CP_OFF

TIQUES EQU 0x20 ; Contador do LED
TIQUES_T EQU 0x21 ; Valor de tiques atual
AUX EQU 0x22 ; Auxiliar para verificação do byte recebido


    ORG 0x0000
    	GOTO INICIO

    ORG 0x0004	
        BCF INTCON, T0IF ; Apaga o bit de flag de interrupção do INTCON

        MOVLW D'131'
        MOVWF TMR0 ; TMR0 = 131 

        DECFSZ TIQUES,1 ; Decrementa TIQUES e se o resultado for 0 ele pula a próxima linha
        GOTO FIM_INTERR

        BANKSEL PORTB
        MOVLW B'10000000'
        XORWF PORTB,1 ; Altera o estado do RB7
        MOVF TIQUES_T,W
        MOVWF TIQUES ; Redefine a variável TIQUES

FIM_INTERR:
        RETFIE ; Retorna da interrupção   


INICIO:
    ;------------------------------------
    ; Configuração dos registradores I/O
    ;------------------------------------
    BANKSEL TRISB       
    MOVLW B'00000000'     
    MOVWF TRISB

	BANKSEL TRISC       
    MOVLW B'10000000'     ; RC7 = RX input, RC6 = TX output
    MOVWF TRISC

	BANKSEL SPBRG
    MOVLW d'25'
    MOVWF SPBRG           ; Set baud rate

    ;--------------------------------------
    ; Configuração dos registradores USART 
    ;--------------------------------------
	BANKSEL TXSTA
	MOVLW b'00100100'
	MOVWF TXSTA
	
	BANKSEL RCSTA
	MOVLW b'10010000'
	MOVWF RCSTA
    
    ; INTERRUPÇÃO
    BANKSEL OPTION_REG
    MOVLW B'10000101'   
    MOVWF OPTION_REG ; Define os bits de OPITON_REG para configurar o clock do próprio PIC como fonte da interrupção além de definir o divisor(PRESCALER) como sendo 64

    BANKSEL TMR0
    MOVLW D'131'
    MOVWF TMR0 ; TMR0 = 131

    BANKSEL INTCON
    MOVLW B'10100000'
    MOVWF INTCON; Define os bits de INTCON para definir corretamente as interrupções 

    MOVLW D'15'
    MOVWF TIQUES_T
    MOVWF TIQUES 

    ; Wait for a byte to be received
RECEBER_BYTE:
	BANKSEL PIR1
    BTFSS PIR1, RCIF      ; Verifica a flag RCIF para verificar se chegou algum byte
    GOTO RECEBER_BYTE	

	BANKSEL RCREG
    MOVF RCREG, W         ; Read received byte
    MOVWF AUX

    ; Verificar qual byte foi recebido
    MOVLW D'1'
    SUBWF AUX,0;
    BTFSC STATUS,Z; AUX == 1?
    GOTO DEU_UM ; SIM
    ;NÃO
    MOVLW D'2'
    SUBWF AUX,0;
    BTFSC STATUS,Z; AUX == 2?
    GOTO DEU_DOIS;SIM
    ;NÃO
    MOVLW D'3'
    SUBWF AUX,0;
    BTFSC STATUS,Z; AUX == 3?
    GOTO DEU_TRES;SIM
    ;NÃO
    MOVLW D'4'
    SUBWF AUX,0;
    BTFSC STATUS,Z; AUX == 4?
    GOTO DEU_QUATRO;SIM
    GOTO RECEBER_BYTE;NÃO

DEU_UM:
    MOVLW D'15'
    MOVWF TIQUES
    MOVWF TIQUES_T
    GOTO TRANSMITIR_BYTE

DEU_DOIS:
    MOVLW D'31'
    MOVWF TIQUES
    MOVWF TIQUES_T
    GOTO TRANSMITIR_BYTE

DEU_TRES:
    MOVLW D'62'
    MOVWF TIQUES
    MOVWF TIQUES_T
    GOTO TRANSMITIR_BYTE

DEU_QUATRO:
    MOVLW D'125'
    MOVWF TIQUES
    MOVWF TIQUES_T
    GOTO TRANSMITIR_BYTE


TRANSMITIR_BYTE:
	BANKSEL PIR1
    BTFSS PIR1, TXIF      ; Verifica se a flag TXIF está setada para saber se o buffer de transmissão está livre
    GOTO TRANSMITIR_BYTE
    MOVF TIQUES_T,W		; Move o valor a ser transmitido

	BANKSEL TXREG
    MOVWF TXREG           ; Echo byte
    GOTO RECEBER_BYTE

    END
